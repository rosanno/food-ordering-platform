// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  ownerId   String
  name      String
  country   String
  city      String
  slug      String
  imageUrl  String
  menu      Menu[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Menu {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  menuName     String
  price        String
  discount     String?
  imageUrl     String?
  imageKey     String?
  slug         String
  description  String?
  metaTitle    String
  metaKeywords String
  restaurant   Restaurant?    @relation(fields: [restaurantId], references: [id])
  restaurantId String         @db.ObjectId
  orderItem    OrderItem[]
  cartItem     CartItem[]
  favoriteItem FavoriteItem[]

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Order {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  customerId  String
  name        String
  orderItems  OrderItem[]
  status      Status
  totalAmount Int

  createdAt   DateTime    @default(now())
}

model OrderItem {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  orderId String @db.ObjectId
  menuId  String @db.ObjectId
  order   Order  @relation(fields: [orderId], references: [id])
  menu    Menu   @relation(fields: [menuId], references: [id])
}

model Cart {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  customerId String
  items      CartItem[]

  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model CartItem {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  cart     Cart   @relation(fields: [cartId], references: [id])
  cartId   String @db.ObjectId
  menu     Menu   @relation(fields: [menuId], references: [id])
  menuId   String @db.ObjectId
  quantity Int    @default(1)
}

model Favorite {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  customerId   String
  favoriteItem FavoriteItem[]

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model FavoriteItem {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  favorite   Favorite  @relation(fields: [favoriteId], references: [id])
  favoriteId String    @db.ObjectId
  menu       Menu      @relation(fields: [menuId], references: [id])
  menuId     String    @db.ObjectId
}

enum Status {
  place
  paid
  inProgress
  outForDelivery
  delivered
}
